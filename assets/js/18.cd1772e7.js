(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{432:function(t,a,_){t.exports=_.p+"assets/img/api_test_framework_v1.ea0a6c92.png"},490:function(t,a,_){"use strict";_.r(a);var s=_(31),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),s("h2",{attrs:{id:"为什么要做接口测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要做接口测试"}},[t._v("#")]),t._v(" 为什么要做接口测试？")]),t._v(" "),s("ul",[s("li",[t._v("黑盒测试回归效率低；")]),t._v(" "),s("li",[t._v("回归的覆盖率不足；")]),t._v(" "),s("li",[t._v("手动测试的偶然性和不确定性；")]),t._v(" "),s("li",[t._v("系统越复杂，问题越多")])]),t._v(" "),s("h2",{attrs:{id:"平台开发背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#平台开发背景"}},[t._v("#")]),t._v(" 平台开发背景")]),t._v(" "),s("p",[t._v("在开始本项目前，我已经写了一个轻量化的接口测试框架，并在团队中推广使用。（V1版）")]),t._v(" "),s("p",[t._v("这是一个xmind管理、设计接口测试用例，执行框架读取用例数据并以数据驱动去执行用例。")]),t._v(" "),s("p",[t._v("V1版接口测试框架设计：\n"),s("img",{attrs:{src:_(432),alt:"An image"}})]),t._v(" "),s("h3",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("简单灵活")]),t._v(" "),s("li",[t._v("Xmind思维导图用例设计效率高，方便测试用例评审")])]),t._v(" "),s("h3",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("大量接口的情况，管理困难")]),t._v(" "),s("li",[t._v("接口变更频繁，用例维护成本高")]),t._v(" "),s("li",[t._v("接口覆盖率、用例执行情况等难以统计")]),t._v(" "),s("li",[t._v("场景测试步骤复用困难")]),t._v(" "),s("li",[t._v("更偏向于一款工具，测试执行后即完成")])])])}),[],!1,null,null,null);a.default=v.exports}}]);